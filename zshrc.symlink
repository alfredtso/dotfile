stty -ixon
# If you come from bash you might have to change your $PATH.

### PATHS !
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin/

### for go 
export PATH=$PATH:/usr/local/go/bin

# for openssl "libssl.so.1.1"
export LD_LIBRARY_PATH="/usr/local/lib64:$LD_LIBRARY_PATH"
export OPENSSL_INCLUDE_DIR="/usr/local/include/openssl"
export OPENSSL_LIB_DIR="/usr/local/lib64"

# for the ML
# export PATH="$PATH:/usr/local/smlnj/bin"

# for Jenv
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

# for latex
#export PATH="$PATH:/Library/TeX/texbin/"

# Rustup
export PATH="$HOME/.cargo/bin:$PATH"

# for pgenv
# export PATH=$PATH:~/Github/pgenv/pgsql/bin
export PGDATA='/usr/local/var/postgres'

# for git gpg sign
export GPG_TTY=$(tty)

# for Google Cloud Platfomr
# export ZONE="asia-southeast1-b"
# export INSTANCE_NAME="instance-1"

# for Java version manage
# export PATH="$HOME/.jenv/bin:$PATH"

# for haskell
# export PATH="/Users/alfredtso/.local/bin:$PATH"

# for C-Family LSP 'clangd'
#export PATH="/usr/local/Cellar/llvm/10.0.0_3/bin:$PATH"


# Editor
export EDITOR='vim -u NONE'
export VISUAL='vim -u NONE'

# color for "ls"
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export WORKON_HOME=~/Envs

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="agnoster"

# fzf
export FZF_DEFAULT_COMMAND="rg --files --hidden --follow --glob '!/Library/**' -g '!.git/'"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND='fd --type d --follow --exclude .git'
#export FZF_CTRL_T_COMMAND='fd --type f --type d --hidden --follow --exclude .git'
export FZF_TMUX=1
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"
export FZF_CTRL_T_OPTS="--select-1 --exit-0 --preview '(highlight -0 ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'" 


# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  docker docker-compose
  aws
)

source $ZSH/oh-my-zsh.sh
# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias cht='cht.sh'
#alias nvim='~/Downloads/nvim.appimage'
alias datagrip='nohup ~/.local/DataGrip-2021.3.3/bin/datagrip.sh >/dev/null 2>&1'
alias rga='~/.cargo/bin/rga'
alias aws=/usr/local/bin/aws
alias bat='bat --theme=gruvbox-dark -p'
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# alias databasedocker="docker run -it -v ~/Coding/DockerFile:/SharedMacOS cs186/environment bash" 
# alias adobe='open /Applications/Adobe\ Acrobat\ Reader\ DC.app'
# alias okular='/usr/local/Cellar/okular/20.04.2_1/bin/okular.app' 

## nnn
alias lsn='nnn -dea'
#NNN_PLUG_PERSONAL='g:personal/convert2zoom;p:personal/echo'
#NNN_PLUG_WORK='j:work/prettyjson;d:work/foobar'
#NNN_PLUG_INLINE='e:_go run $nnn*'
#NNN_PLUG_DEFAULT='1:bookmarks;2:ipinfo;p:preview-tui;o:fzz;b:nbak'
#NNN_PLUG="$NNN_PLUG_PERSONAL;$NNN_PLUG_WORK;$NNN_PLUG_DEFAULT;$NNN_PLUG_INLINE"
#export NNN_PLUG
export NNN_FIFO=/tmp/nnn.fifo
export NNN_PLUG='e:!vim -u NONE $nnn*;s:-!sudo -E vim -u NONE $nnn*;p:preview-tui;o:fzz;b:bookmarks'
export NNN_BMS='d:~/Documents;D:~/Downloads;s:/;h:~/;s:~/Doc'
[ -f ~/.config/nnn/quitcd.bash_zsh ] && source ~/.config/nnn/quitcd.bash_zsh

bindkey -v
bindkey -M viins 'jk' vi-cmd-mode
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fzf-man
fzf-man-widget() {
  batman="man {1} | col -bx | bat --language=man --plain --color always --theme=\"Monokai Extended\""
   man -k . | sort \
   | awk -v cyan=$(tput setaf 6) -v blue=$(tput setaf 4) -v res=$(tput sgr0) -v bld=$(tput bold) '{ $1=cyan bld $1; $2=res blue;} 1' \
   | fzf  \
      -q "$1" \
      --ansi \
      --tiebreak=begin \
      --prompt=' Man > '  \
      --preview-window '50%,rounded,<50(up,85%,border-bottom)' \
      --preview "${batman}" \
      --bind "enter:execute(man {1})" \
      --bind "ctrl-d:preview-half-page-down,ctrl-u:preview-half-page-up" \
      --bind "down:preview-down,up:preview-up" \
      --bind "alt-c:+change-preview(cht.sh {1})+change-prompt(ﯽ Cheat > )" \
      --bind "alt-m:+change-preview(${batman})+change-prompt( Man > )" \
      --bind "alt-t:+change-preview(tldr {1})+change-prompt(ﳁ TLDR > )"
  zle reset-prompt
}
# `Ctrl-Y` keybinding to launch the widget (this widget works only on zsh, don't know how to do it on bash and fish (additionaly pressing`ctrl-backspace` will trigger the widget to be executed too because both share the same keycode)
bindkey '^y' fzf-man-widget
zle -N fzf-man-widget

# Icon used is nerdfont
# remove Ctrl-G binding
#bindkey -r '^G'

# fzf completion key
# export FZF_COMPLETION_TRIGGER=''
# bindkey '^T' fzf-completion
# bindkey '^I' fzf-file-widget

# z
[ -f ~/dotfile/z.sh ] && source ~/dotfile/z.sh

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export PATH="/home/alfredtso/.local/bin:$PATH"
#export PATH="$HOME/.poetry/bin:$PATH"
# for pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

# for pyenv-virtualenv
eval "$(pyenv virtualenv-init -)"


fcat() { cat $@ | sed 's/'`echo "\001"`'/|/g' }
orderapp() { source ~/.orderapp.sh }
hkbbg() { xvnc4viewer 192.168.150.180 -passwd ~/.vnc/passwd }
newld5() { xvnc4viewer 192.168.50.180 -passwd ~/.vnc/passwd }
newld() { xvnc4viewer 192.168.50.180 }
oldbbg() { xvnc4viewer 192.168.125.180 -passwd ~/.vnc/passwd }
newbbg() { xvnc4viewer 192.168.125.181 -passwd ~/.vnc/passwd }
ips() { bat /etc/hosts }

# Docker command alias
alias shellcheck='docker run --rm -v "$PWD:/mnt" koalaman/shellcheck:stable'
#alias mmd='docker run -it -v "$(PWD):/data" -u root minlag/mermaid-cli -i /data/$1.md -o /data/$1.mermaid.md'

# Mermaid JS command
mermaid() {
	docker run -it -v "$PWD:/data" -u root minlag/mermaid-cli -i /data/$1.md -o /data/$1.mermaid.md;
}


# >>>> Vagrant command completion (start)
fpath=(/opt/vagrant/embedded/gems/2.3.1/gems/vagrant-2.3.1/contrib/zsh $fpath)
compinit
# <<<<  Vagrant command completion (end)
