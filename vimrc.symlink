" Enabling filetype support provides filetype-specific indenting, syntax
" highlighting, omni-completion and other useful settings.
filetype plugin indent on
filetype plugin on
syntax on
set nocursorline
set ttyfast
set lazyredraw
set laststatus=2
set clipboard=unnamed
" 'matchit.vim' is built-in so let's enable it!
" Hit '%' on 'if' to jump to 'else'.
"runtime macros/matchit.vim

"Key mappings
let mapleader=","
inoremap jk <Esc>`^
vnoremap jk <Esc>`^ 
"inoremap jj <Esc>`^
"vnoremap jj <Esc>`^ 

"Parenthesis mapping
inoremap <C-j> <Esc>/[)}"'\]>]<CR>:nohl<CR>a
inoremap ( ()<Esc>:let leavechar=")"<CR>i
inoremap [ []<Esc>:let leavechar="]"<CR>i
inoremap { {}<Esc>:let leavechar="]"<CR>i
inoremap " ""<Esc>:let leavechar="]"<CR>i
inoremap ' ''<Esc>:let leavechar="]"<CR>i

"inoremap <Tab> <C-P> "tab for autocomplete
" various setting
"=====Tab Setting====="
set autoindent                 " Minimal automatic indenting for any filetype.
set smartindent					"does the right indent most of the time
set smarttab
set tabstop=4             " tab spacing
set cindent				  "stricter rules for c programs
set softtabstop=4         " unify
set shiftwidth=4          " indent/outdent by 4 columns
set shiftround            " always indent/outdent to the nearest tabstop
set backspace=indent,eol,start " Proper backspace behavior.
set hidden                     " Possibility to have more than one
                               " unsaved buffers.
set incsearch                  " Incremental search, hit '<CR>' to stop.
set ruler                      " Shows the current line number at the bottom.
                               " right of the screen.
set wildmenu                   " Great command-line completion, use '<Tab>' to
                               " move around and '<CR>' to validate.
set number relativenumber		       " show line number

"set t_Co=256
set background=dark
colorscheme solarized "color theme

set wildmode=longest,list:longest
set complete=.,b,u,]
set completeopt=menu,preview	"for built-in complete
set omnifunc=syntaxcomplete

""""""""""""""""""""""""""""""""""""""""
"""Python file type""""
"""""""""""""""""""""""""""""""""""""""
au BufNewFile,BufRead *.py
    \ set tabstop=4
    \ set softtabstop=4
    \ set shiftwidth=4
    \ set textwidth=79
    \ set expandtab
    \ set autoindent
    \ set fileformat=unix
""Plug ins
"For fzf
"set rtp+=~/.fzf
"set rtp+=/Users/alfredtsombp/Library/Python/3.6/lib/python/site-packages/powerline/bindings/vim

"Pathogen
"filetype off

"call pathogen#infect()
"call pathogen#helptags()

"For Vundle
set nocompatible              " be iMproved, required
filetype off                  " required
"For CtrlP
set runtimepath^=~/.vim/bundle/ctrlp.vim
"set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'vim-syntastic/syntastic'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'jez/vim-better-sml'
"Plugin 'christoomey/vim-tmux-navigator' "for navigating vim split and tmux split
"Plugin 'Valloric/YouCompleteMe'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes' " airline is the statusbar tool
call vundle#end()            " required
filetype plugin indent on    " required

"Pymode"
"let g:pymode_python = 'python3'
"YouCompleteMe"
"let g:ycm_python_binary_path = '/usr/local/opt/python/libexec/bin/python'
"let g:ycm_add_preview_to_completeopt=1
"let g:ycm_autoclose_preview_window_after_completion = 1
"nnoremap <leader>gl :YcmCompleter GoToDeclaration<CR>
"nnoremap <leader>gf :YcmCompleter GoToDefinition<CR>
"
"""Airline""""
let g:airline_theme='base16'
"""""""""""""""""""""""""""
""""Syntastic""""
"""""""""""""""""""""""""""
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

""""""""""""""""""""""""""""
"""""""CtrlP"""""""""""
""""""""""""""""""""""""""""
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
